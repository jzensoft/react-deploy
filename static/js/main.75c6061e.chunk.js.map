{"version":3,"sources":["App.js","reportWebVitals.js","index.js","../node_modules/peerjs/dist sync"],"names":["peer","Peer","App","useState","myID","setMyID","friendID","setFriendID","mystream","setsMytream","stateConnect","setStateConnect","stateButton","setSateButton","stateTooltip","setStateTooltip","stateCopy","setStateCopy","stateDisConnect","setSateDisConnect","myVideo","useRef","friendVideo","document","title","useEffect","navigator","mediaDevices","getUserMedia","video","audio","then","stream","current","srcObject","on","id","conn","data","call","answer","catch","err","console","error","MyVideo","FriendVideo","playsInline","ref","autoPlay","style","maxWidth","togleStateDisConnect","className","md","marginBottom","padding","border","theme","marginTop","color","onMouseLeave","onClick","destroy","window","location","reload","cursor","onMouseEnter","margin","clipboard","writeText","open","toggle","target","type","placeholder","value","onChange","e","length","handleChange","htmlFor","size","pill","connect","send","alert","disabled","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","webpackEmptyContext","req","Error","code","keys","resolve","module","exports"],"mappings":"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","file":"static/js/main.75c6061e.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport Peer from 'peerjs';\nimport {\n  Container,\n  Row,\n  Col,\n  Alert,\n  Card,\n  CardBody,\n  Button,\n  Badge,\n  Tooltip,\n} from \"shards-react\";\n\nvar peer = new Peer();\n\nconst App = () => {\n\n  const [myID, setMyID] = useState('')\n  const [friendID, setFriendID] = useState('')\n  const [mystream, setsMytream] = useState()\n\n  const [stateConnect, setStateConnect] = useState(false)\n  const [stateButton, setSateButton] = useState(false)\n  let [stateTooltip, setStateTooltip] = useState(false)\n  let [stateCopy, setStateCopy] = useState(false)\n  let [stateDisConnect, setSateDisConnect] = useState(false)\n\n  const myVideo = useRef();\n  const friendVideo = useRef();\n\n  // Set Title\n  document.title = myID\n\n  useEffect(() => {\n\n    navigator.mediaDevices.getUserMedia({ video: true, audio: true }).then(stream => {\n      setsMytream(stream);\n      if (myVideo.current) {\n        myVideo.current.srcObject = stream;\n      }\n    })\n\n    peer.on('open', id => {\n      setMyID(id);\n    });\n\n    peer.on('connection', conn => {\n      setStateConnect(true)\n\n      // Receive Data\n      conn.on('data', data => {\n        setFriendID(data)\n      })\n\n    });\n\n    peer.on(\"disconnect\", () => {\n      setStateConnect(false)\n    });\n\n    // Answer\n    peer.on('call', call => {\n      navigator.mediaDevices.getUserMedia({ video: true, audio: true })\n        .then((stream) => {\n          call.answer(stream)\n          call.on('stream', stream => {\n            friendVideo.current.srcObject = stream\n          })\n        })\n        .catch((err) => {\n          console.error('Failed to get local stream', err);\n        });\n    })\n\n  }, []);\n\n\n  function startConnection() {\n\n    const conn = peer.connect(friendID);\n    setStateConnect(true)\n\n    // Send Friend ID\n    conn.on('open', () => {\n      conn.send(friendID)\n    })\n\n    peer.on('error', err => {\n      if (err.type === 'peer-unavailable')\n        alert(\"The id or peer you're trying to connect to does not exist.\")\n    })\n\n    // Call\n    let call = peer.call(friendID, mystream)\n    call.on('stream', stream => {\n      friendVideo.current.srcObject = stream\n    })\n\n  }\n\n  // DisConnect Peer and Refresh Page\n  const DisConnect = () => {\n    peer.destroy()\n    window.location.reload(false)\n  }\n\n  // My Video Conponent\n  let MyVideo;\n  if (mystream) {\n    MyVideo = (\n      <video playsInline ref={myVideo} autoPlay style={{ maxWidth: \"100%\" }} />\n    );\n  }\n\n  // Friend Video Conponent\n  let FriendVideo;\n  if (friendVideo) {\n    FriendVideo = (\n      <video playsInline ref={friendVideo} autoPlay style={{ maxWidth: \"100%\" }} />\n    );\n  }\n\n  const toggleTooltip = () => {\n    setStateTooltip(stateTooltip ? false : true)\n  }\n\n  const copyMyID = () => {\n    setStateCopy(stateCopy ? false : true)\n    navigator.clipboard.writeText(myID)\n  }\n\n  const togleStateDisConnect = () => {\n    setSateDisConnect(stateDisConnect ? false : true)\n  }\n\n  const handleChange = (e) => {\n\n    setFriendID(e.target.value)\n\n    if (e.target.value.length > 10)\n      setSateButton(true)\n    else\n      setSateButton(false)\n\n  }\n\n  return (\n    <>\n      <Container>\n        <Row className=\"mt-2\">\n          <Col md=\"6\">\n            <Alert style={{ marginBottom: \"0\" }}>\n              My Video | Peer is {myID}\n            </Alert>\n            {MyVideo}\n          </Col>\n\n          <Col md=\"6\" style={{ padding: stateConnect ? ('') : (\"0\"), border: stateConnect ? ('') : (\"1px solid #ccc\") }}>\n            <Alert theme=\"secondary\" style={{ marginBottom: \"0\" }}>\n              Friend Video {friendID ? (`| Peer is ${friendID}`) : ('')}\n            </Alert>\n            {\n              stateConnect ? FriendVideo : (<h3 className=\"text-center\" style={{ marginTop: \"20%\", color: \"#ccc\" }}>No video yet</h3>)\n            }\n          </Col>\n        </Row>\n\n\n        <Card className=\"mt-5 mb-2\">\n          <CardBody>\n            {\n              stateConnect ?\n                (\n                  <Row>\n\n                    <Col md=\"3\">\n\n                      {\n                        stateDisConnect ? (\n                          <Badge theme=\"danger\" onMouseLeave={togleStateDisConnect} onClick={DisConnect} style={{ cursor: \"pointer\" }}>\n                            <h4 style={{ marginBottom: \"0\", padding: \"10px\", color: \"#FFF\" }}>\n                              DisConnect\n                            </h4>\n                          </Badge>\n                        ) : (\n                            <Badge theme=\"success\" onMouseEnter={togleStateDisConnect} >\n                              <h4 style={{ marginBottom: \"0\", padding: \"10px\", color: \"#FFF\" }}>\n                                Connected Peer ID\n                            </h4>\n                            </Badge>\n                          )\n                      }\n\n\n\n                    </Col>\n\n                    <Col md=\"9\">\n                      <h4 style={{ margin: \"0\", padding: \"10px\" }}>\n                        {friendID}\n                      </h4>\n                    </Col>\n\n                  </Row>\n                )\n                :\n                (\n                  <Row>\n                    <Row>\n                      <Col>\n                        <h4>\n\n                          <Badge className=\"mr-3\" theme=\"info\">My ID</Badge>\n                          <label style={{ cursor: \"pointer\" }} id=\"myId\" onClick={copyMyID}>\n                            {myID}\n                          </label>\n\n                        </h4>\n                        <Tooltip\n                          open={stateTooltip}\n                          toggle={toggleTooltip}\n                          target=\"#myId\"\n                        >\n                          {\n                            stateCopy ? (\"Copied\") : (\"Clicke to Coppy\")\n                          }\n                        </Tooltip>\n                      </Col>\n                    </Row>\n\n                    <Row>\n                      <Col md=\"10\">\n                        <div className=\"form-floating mb-3\">\n                          <input type=\"text\" className=\"form-control\" id=\"friendID\" placeholder=\"Enter Friend ID\" value={friendID} onChange={e => handleChange(e)} />\n                          <label htmlFor=\"friendID\">Enter Friend ID</label>\n                        </div>\n                      </Col>\n\n                      <Col md=\"2\">\n                        {\n                          stateButton ? (\n                            <Button size=\"lg\" pill theme=\"success\" onClick={startConnection} >Connect</Button>\n                          ) : (\n                              <Button size=\"lg\" pill theme=\"success\" disabled >Connect</Button>\n                            )\n                        }\n                      </Col>\n                    </Row>\n                  </Row>\n                )\n            }\n\n          </CardBody>\n        </Card>\n      </Container>\n    </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"shards-ui/dist/css/shards.min.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 81;"],"sourceRoot":""}