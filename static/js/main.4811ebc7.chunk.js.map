{"version":3,"sources":["../node_modules/peerjs/dist sync","App.js","reportWebVitals.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","peer","Peer","host","port","secure","conn","connect","App","useState","myID","setMyID","friendID","setFriendID","connected","setConnected","files","setFiles","useEffect","on","connection","data","onReceiveData","blob","Blob","file","type","filetype","url","URL","createObjectURL","addFile","name","filename","className","style","color","onChange","target","size","send","alert","SendFile","value","placeholder","onClick","map","index","href","download","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yHAAA,SAASA,EAAoBC,GAC5B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBF,EAAM,KAEjD,MADAC,EAAEE,KAAO,mBACHF,EAEPF,EAAoBK,KAAO,WAAa,MAAO,IAC/CL,EAAoBM,QAAUN,EAC9BO,EAAOC,QAAUR,EACjBA,EAAoBS,GAAK,I,wHCLrBC,EAAO,IAAIC,IAAK,CAClBC,KAAM,2CACNC,KAAM,IACNC,QAAQ,IAENC,EAAOL,EAAKM,UAiHDC,EA/GH,WAAO,IAAD,EACQC,mBAAS,IADjB,mBACTC,EADS,KACHC,EADG,OAEgBF,mBAAS,IAFzB,mBAETG,EAFS,KAECC,EAFD,OAGkBJ,oBAAS,GAH3B,mBAGTK,EAHS,KAGEC,EAHF,OAIUN,mBAAS,IAJnB,mBAITO,EAJS,KAIFC,EAJE,KAMhBC,qBAAU,WACRjB,EAAKkB,GAAG,QAAQ,SAACnB,GACfW,EAAQX,MAGVC,EAAKkB,GAAG,cAAc,SAACC,GACrBd,EAAOc,EACPL,GAAa,GAEbK,EAAWD,GAAG,QAAQ,eAEtBC,EAAWD,GAAG,QAAQ,SAACE,GACrBC,EAAcD,WAGjB,IAEH,IA4BMC,EAAgB,SAACD,GACrB,IAAME,EAAO,IAAIC,KAAK,CAACH,EAAKI,MAAO,CAAEC,KAAML,EAAKM,WAC1CC,EAAMC,IAAIC,gBAAgBP,GAEhCQ,EAAQ,CAAEC,KAAMX,EAAKY,SAAUL,IAAKA,KAGhCG,EAAU,SAACN,GACf,IAAMJ,EAAO,CAAEW,KAAMP,EAAKO,KAAMJ,IAAKH,EAAKG,KAC1CX,GAAS,SAACD,GAAD,4BAAeA,GAAf,CAAsBK,QAGjC,OACE,sBAAKa,UAAU,MAAf,UACE,0CAAaxB,KAEZI,EACC,oBAAIqB,MAAO,CAAEC,MAAO,SAApB,uBAEA,oBAAID,MAAO,CAAEC,MAAO,OAApB,yBAGDtB,EACC,8BACE,uBACEY,KAAK,OACLM,KAAK,OACLhC,GAAG,OACHqC,SAAU,SAAC5C,GAAD,OA5CH,SAACA,GAChB,IAAMgC,EAAOhC,EAAE6C,OAAOtB,MAAM,GAE5B,GAAIS,EAAKc,MAAQ,QAAS,CACxB,IAAMhB,EAAO,IAAIC,KAAK/B,EAAE6C,OAAOtB,MAAO,CAAEU,KAAMD,EAAKC,OAEnDpB,EAAKkC,KAAK,CACRf,KAAMF,EACNU,SAAUR,EAAKO,KACfL,SAAUF,EAAKC,YAGjBe,MAAM,iCAgCiBC,CAASjD,QAI9B,gCACE,uBACEiC,KAAK,OACLiB,MAAO/B,EACPyB,SAAU,SAAC5C,GAAD,OAAOoB,EAAYpB,EAAE6C,OAAOK,QACtCC,YAAalC,IAEf,wBAAQgB,KAAK,SAASmB,QAAS,kBAlErCvC,EAAOL,EAAKM,QAAQK,IAEfO,GAAG,QAAQ,WACdJ,GAAa,WAGfT,EAAKa,GAAG,QAAQ,SAACE,GACfC,EAAcD,OA2DV,wBAMJ,8BACE,6BACGL,EAAM8B,KAAI,SAACrB,EAAMsB,GAAP,OACT,6BACE,mBAAGC,KAAMvB,EAAKG,IAAKqB,SAAUxB,EAAKO,KAAlC,SACGP,EAAKO,QAFDe,cCjGNG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4811ebc7.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 14;","import React, { useState, useEffect } from \"react\";\nimport Peer from \"peerjs\";\n\nvar peer = new Peer({\n  host: \"https://mypeerjs611463022.herokuapp.com/\",\n  port: 443,\n  secure: true,\n});\nvar conn = peer.connect();\n\nconst App = () => {\n  const [myID, setMyID] = useState(\"\");\n  const [friendID, setFriendID] = useState(\"\");\n  const [connected, setConnected] = useState(false);\n  const [files, setFiles] = useState([]);\n\n  useEffect(() => {\n    peer.on(\"open\", (id) => {\n      setMyID(id);\n    });\n\n    peer.on(\"connection\", (connection) => {\n      conn = connection;\n      setConnected(true);\n\n      connection.on(\"open\", () => {});\n\n      connection.on(\"data\", (data) => {\n        onReceiveData(data);\n      });\n    });\n  }, []);\n\n  const Connect = (friendD) => {\n    conn = peer.connect(friendID);\n\n    conn.on(\"open\", () => {\n      setConnected(true);\n    });\n\n    conn.on(\"data\", (data) => {\n      onReceiveData(data);\n    });\n  };\n\n  const SendFile = (e) => {\n    const file = e.target.files[0];\n\n    if (file.size <= 5242880) {\n      const blob = new Blob(e.target.files, { type: file.type });\n\n      conn.send({\n        file: blob,\n        filename: file.name,\n        filetype: file.type,\n      });\n    } else {\n      alert(\"The file is larger than 5 MB.\");\n    }\n  };\n\n  const onReceiveData = (data) => {\n    const blob = new Blob([data.file], { type: data.filetype });\n    const url = URL.createObjectURL(blob);\n\n    addFile({ name: data.filename, url: url });\n  };\n\n  const addFile = (file) => {\n    const data = { name: file.name, url: file.url };\n    setFiles((files) => [...files, data]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h3>My ID : {myID}</h3>\n\n      {connected ? (\n        <h4 style={{ color: \"green\" }}>Connected</h4>\n      ) : (\n        <h4 style={{ color: \"red\" }}>Not Connect</h4>\n      )}\n\n      {connected ? (\n        <div>\n          <input\n            type=\"file\"\n            name=\"file\"\n            id=\"file\"\n            onChange={(e) => SendFile(e)}\n          />\n        </div>\n      ) : (\n        <div>\n          <input\n            type=\"text\"\n            value={friendID}\n            onChange={(e) => setFriendID(e.target.value)}\n            placeholder={myID}\n          />\n          <button type=\"submit\" onClick={() => Connect(friendID)}>\n            Connect\n          </button>\n        </div>\n      )}\n\n      <div>\n        <ul>\n          {files.map((file, index) => (\n            <li key={index}>\n              <a href={file.url} download={file.name}>\n                {file.name}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}